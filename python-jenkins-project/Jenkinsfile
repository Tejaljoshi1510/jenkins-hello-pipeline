pipeline {
    agent any

    parameters {
        string(name: 'NAME', defaultValue: 'World', description: 'Who are we saying hello to?')
    }

    environment {
        DOCKER_HUB_USER = 'tejal15'
        DOCKER_HUB_PSW  = 'Tejaljoshi@15'
    }

    stages {
        stage('GREETING') {
            steps {
                echo "HELLO, ${params.NAME}!"
            }
        }

        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

    stage('Install Dependencies') {
    steps {
        sh '''
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
        '''
            }
        }

        stage('Run Tests') {
            steps {
                sh 'pytest tests/ --junitxml=reports/results.xml'
            }
            post {
                always {
                    junit 'reports/results.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${DOCKER_HUB_USER}/jenkins-flask:latest ."
            }
        }

        stage('Run Container') {
            steps {
                sh "docker run -d --name flask_app -p 5000:5000 ${DOCKER_HUB_USER}/jenkins-flask:latest"
                sh "sleep 5 && curl -f http://localhost:5000/"
                sh "docker stop flask_app && docker rm flask_app"
            }
        }

        stage('Push to DockerHub') {
            steps {
                sh "echo ${DOCKER_HUB_PSW} | docker login -u ${DOCKER_HUB_USER} --password-stdin"
                sh "docker push ${DOCKER_HUB_USER}/jenkins-flask:latest"
            }
        }
    }

    post {
        always {
            echo "Build finished with status: ${currentBuild.currentResult}"
        }
    }
}
